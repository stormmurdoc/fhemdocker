#   _                                          __
#  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
# (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#

set -g default-terminal "screen-256color"

#run_shell "/usr/bin/powerline-config tmux setup"
source /usr/share/powerline/bindings/tmux/powerline.conf

# colors
#set-option -g pane-active-border-fg green
set-option -g pane-active-border-style fg=green


# new split in current pane (horizontal / vertical)
bind-key c split-window -v # split pane horizontally
bind-key v split-window -h # split pane vertically

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-style bg=red
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi
